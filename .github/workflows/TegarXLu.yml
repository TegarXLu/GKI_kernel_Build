name: build-TegarXLu_Kernel

on:
  workflow_dispatch:
    inputs:
      KERNEL_REPO:
        description: 'Link repo kernel'
        required: true
        default: 'https://github.com/TegarXLu/kernel_common_gki-5.10'
      KERNEL_BRANCH:
        description: 'Branch kernel'
        required: true
        default: 'wkcw'
      BUILD_NOROOT:
        description: 'Build Noroot variant'
        type: boolean
        default: true
      BUILD_KSUNEXT:
        description: 'Build KSUNext variant'
        type: boolean
        default: false
      BUILD_SUKISU:
        description: 'Build SukiSU variant'
        type: boolean
        default: false
      RELEASE:
        description: 'Release kernel?'
        type: boolean
        default: false

jobs:
  set-date:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.getdate.outputs.date }}
    steps:
      - name: Get Current Date
        id: getdate
        run: echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - name: Build matrix
        id: matrix
        run: |
          variants=()
          if [ "${{ github.event.inputs.BUILD_NOROOT }}" = "true" ]; then
            variants+=("noroot")
          fi
          if [ "${{ github.event.inputs.BUILD_KSUNEXT }}" = "true" ]; then
            variants+=("ksunext")
          fi
          if [ "${{ github.event.inputs.BUILD_SUKISU }}" = "true" ]; then
            variants+=("sukisu")
          fi
          echo "matrix=$(jq -nc --argjson v "$(printf '%s\n' "${variants[@]}" | jq -R . | jq -s .)" '{"include": $v | map({name:.})}')" >> $GITHUB_OUTPUT

  build:
    needs: setup-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    name: Build ${{ matrix.name }}
    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git wget build-essential bc bison flex libssl-dev libncurses-dev libelf-dev ccache python3 zip unzip

      - name: Create swap
        run: |
          sudo fallocate -l 10G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile

      - name: Clone kernel source
        run: |
          git clone --depth=1 -b ${{ github.event.inputs.KERNEL_BRANCH }} ${{ github.event.inputs.KERNEL_REPO }} kernel

      - name: Prepare variant worktree
        if: matrix.name != 'noroot'
        run: |
          cd kernel
          git config user.name "TegarXLu"
          git config user.email "dimasnasution776@gmail.com"
          git worktree add ../${{ matrix.name }} ${{ github.event.inputs.KERNEL_BRANCH }}

      - name: Apply variant patches
        run: |
          SRC_DIR=${{ matrix.name == 'noroot' && 'kernel' || matrix.name }}
          cd $SRC_DIR
          if [ "${{ matrix.name }}" = "ksunext" ]; then
            curl -sL https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh | bash -s main
            curl -sL https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh | bash -s susfs-main
          elif [ "${{ matrix.name }}" = "sukisu" ]; then
            curl -sL https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh | bash -s main
            curl -sL https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh | bash -s susfs-main
          fi

      - name: Download and extract Clang
        run: |
          mkdir clang && \
          wget -qO clang.tar.gz https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r536225.tar.gz && \
          tar xf clang.tar.gz -C clang

      - name: Configure localversion & HZ
        run: |
          CONFIG_PATH=$([[ "${{ matrix.name }}" = "noroot" ]] && echo "kernel/arch/arm64/configs/gki_defconfig" || echo "${{ matrix.name }}/arch/arm64/configs/gki_defconfig")
          LOCALVER="-TegarXLu${{ matrix.name != 'noroot' && "-${matrix.name}" || "" }}"
          sed -i '/CONFIG_LOCALVERSION/d' $CONFIG_PATH
          printf "\nCONFIG_LOCALVERSION=\"$LOCALVER\"\nCONFIG_HZ_300=y\nCONFIG_HZ=300\n" >> $CONFIG_PATH

      - name: Build kernel
        run: |
          SRC_DIR=${{ matrix.name == 'noroot' && 'kernel' || matrix.name }}
          cd $SRC_DIR
          export ARCH=arm64
          export SUBARCH=arm64
          export CC=clang CXX=clang++ LD=ld.lld AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip HOSTCC=clang HOSTCXX=clang++
          export CROSS_COMPILE=aarch64-linux-gnu-
          export PATH=$GITHUB_WORKSPACE/clang/bin:$PATH
          make O=out gki_defconfig
          make -j$(nproc) O=out LLVM=1 LLVM_IAS=1 LTO=full

      - name: Verify SUSFS/KSU config
        run: |
          CONFIG_OUT=${{ matrix.name == 'noroot' && 'kernel/out/.config' || matrix.name + '/out/.config' }}
          grep -E "CONFIG_KSU=y|CONFIG_KSU_SUSFS=y" "$CONFIG_OUT" && echo "✅ Patches active" || (echo "❌ Missing SUSFS/KSU!" && exit 1)

      - name: Package kernel
        id: zipkernel
        run: |
          DATE=$(date +%Y%m%d)
          OUT_DIR=${{ matrix.name == 'noroot' && 'kernel' || matrix.name }}
          ZIP="TegarXLu-GKI${{ matrix.name != 'noroot' && "-${matrix.name^}" || "" }}-${DATE}.zip"
          git clone https://github.com/TegarXLu/AnyKernel3 ak3
          cp $OUT_DIR/out/arch/arm64/boot/Image.gz ak3/
          cd ak3
          zip -r9 "../$ZIP" .
          echo "zip_name=$ZIP" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.zipkernel.outputs.zip_name }}
          path: ${{ steps.zipkernel.outputs.zip_name }}

  finalize:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: echo "All builds complete."

  release:
    needs: finalize
    if: ${{ github.event.inputs.RELEASE }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create release notes
        run: |
          echo "## TegarXLu GKI Release ${ { needs.set-date.outputs.date } }" > release.md
          echo "- Noroot: ${{ github.event.inputs.BUILD_NOROOT }}" >> release.md
          echo "- KSUNext+SUSFS: ${{ github.event.inputs.BUILD_KSUNEXT }}" >> release.md
          echo "- SukiSU+SUSFS: ${{ github.event.inputs.BUILD_SUKISU }}" >> release.md
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: TegarXLu-GKI-${{ needs.set-date.outputs.date }}
          name: "TegarXLu GKI - ${{ needs.set-date.outputs.date }}"
          body_path: release.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
