name: Build GKI Kernel with Clang 19

on:
  workflow_dispatch:
    inputs:
      BUILD_NOROOT:
        description: 'Build non-root version'
        required: false 
        default: 'true'
      BUILD_KSUNEXT:
        description: 'Build KernelSU-next version'
        required: false
        default: 'true'
      BUILD_SUKISU:
        description: 'Build SukiSU version'
        required: false
        default: 'false'
      RELEASE:
        description: 'Create GitHub release'
        required: false
        default: 'false'

jobs:
  set-date:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.getdate.outputs.date }}
    steps:
      - name: Get Current Date
        id: getdate
        run: echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set build matrix
        id: set-matrix
        run: |
          MATRIX='['
          if [ "${{ github.event.inputs.BUILD_NOROOT }}" == "true" ]; then
            MATRIX+='{"name":"noroot"},'
          fi
          if [ "${{ github.event.inputs.BUILD_KSUNEXT }}" == "true" ]; then
            MATRIX+='{"name":"ksunext"},'
          fi
          if [ "${{ github.event.inputs.BUILD_SUKISU }}" == "true" ]; then
            MATRIX+='{"name":"sukisu"},'
          fi
          MATRIX="${MATRIX%,}]"
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  build:
    needs: [setup-matrix]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    name: Build ${{ matrix.name }}
    steps:
      - name: Set up dependencies
        run: |
          sudo apt update
          sudo apt install -y git wget curl build-essential bc bison \
            flex libssl-dev libncurses-dev libelf-dev ccache python3 unzip

      - name: Create Swap
        run: |
          sudo fallocate -l 10G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile

      - name: Install Clang 19
        run: |
          wget https://github.com/llvm/llvm-project/releases/download/llvmorg-19.1.0/clang+llvm-19.1.0-aarch64-linux-gnu.tar.xz
          tar -xf clang+llvm-19.1.0-aarch64-linux-gnu.tar.xz
          mv clang+llvm-19.1.0-aarch64-linux-gnu clang19
          echo "$(pwd)/clang19/bin" >> $GITHUB_PATH

      - name: Clone Kernel Source
        run: |
          git clone --depth=1 https://github.com/TegarXLu/android_kernel_common-5.10 -b android12-5.10 kernel
          cd kernel
          git submodule update --init --recursive

      - name: Setup Kernel Features
        run: |
          cd kernel
          if [ "${{ matrix.name }}" == "ksunext" ]; then
            git clone https://github.com/tiann/KernelSU -b main kernel
          elif [ "${{ matrix.name }}" == "sukisu" ]; then
            git clone https://github.com/ya0211/sUSFS -b main drivers/susfs
          fi

      - name: Apply Configurations
        run: |
          cd kernel
          
          # Base config
          echo "CONFIG_KPROBES=y" >> arch/arm64/configs/gki_defconfig
          echo "CONFIG_OVERLAY_FS=y" >> arch/arm64/configs/gki_defconfig
          
          # Clang 19 LTO
          echo "CONFIG_LTO_CLANG=y" >> arch/arm64/configs/gki_defconfig
          echo "CONFIG_LTO_CLANG_FULL=y" >> arch/arm64/configs/gki_defconfig
          echo "CONFIG_THINLTO=n" >> arch/arm64/configs/gki_defconfig
          echo "CONFIG_CFI_CLANG=y" >> arch/arm64/configs/gki_defconfig
          
          # Conditional configs
          if [ "${{ matrix.name }}" == "ksunext" ]; then
            echo "CONFIG_KERNELSU=y" >> arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_DEBUG=n" >> arch/arm64/configs/gki_defconfig
          elif [ "${{ matrix.name }}" == "sukisu" ]; then
            echo "CONFIG_SUSFS=y" >> arch/arm64/configs/gki_defconfig
          fi
          
          # Snapdragon tweaks
          echo "CONFIG_SCHED_TUNE=y" >> arch/arm64/configs/gki_defconfig
          echo "CONFIG_ENERGY_MODEL=y" >> arch/arm64/configs/gki_defconfig

      - name: Build Kernel
        run: |
          cd kernel
          export ARCH=arm64
          export LLVM=1
          export LLVM_IAS=1
          export CLANG_TRIPLE=aarch64-linux-gnu-
          export CROSS_COMPILE=aarch64-linux-android-
          export CROSS_COMPILE_COMPAT=arm-linux-androideabi-
          
          make O=out ARCH=arm64 gki_defconfig
          
          make -j$(nproc) O=out ARCH=arm64 \
            CC=clang \
            LD=ld.lld \
            AR=llvm-ar \
            NM=llvm-nm \
            STRIP=llvm-strip \
            OBJCOPY=llvm-objcopy \
            OBJDUMP=llvm-objdump \
            CLANG_FLAGS="-march=armv8-a+simd+crypto+crc" \
            KCFLAGS="-Wno-error=implicit-function-declaration" \
            2>&1 | tee build.log

      - name: Verify Features
        run: |
          cd kernel/out
          echo "🔍 Verifying built kernel config..."
          grep -q "CONFIG_LTO_CLANG=y" .config && echo "✅ LTO enabled" || echo "❌ LTO missing"
          if [ "${{ matrix.name }}" == "ksunext" ]; then
            grep -q "CONFIG_KERNELSU=y" .config && echo "✅ KernelSU enabled" || echo "❌ KernelSU missing"
          elif [ "${{ matrix.name }}" == "sukisu" ]; then
            grep -q "CONFIG_SUSFS=y" .config && echo "✅ sUSFS enabled" || echo "❌ sUSFS missing"
          fi

      - name: Package Kernel
        id: package
        run: |
          cd kernel/out
          DATE=$(date +%Y%m%d)
          ZIP_NAME="TegarXLu-GKI"
          
          if [ "${{ matrix.name }}" == "noroot" ]; then
            ZIP_NAME="${ZIP_NAME}-${DATE}.zip"
          elif [ "${{ matrix.name }}" == "ksunext" ]; then
            ZIP_NAME="${ZIP_NAME}-KSUNext-${DATE}.zip"
          elif [ "${{ matrix.name }}" == "sukisu" ]; then
            ZIP_NAME="${ZIP_NAME}-SukiSU-${DATE}.zip"
          fi
          
          git clone https://github.com/osm0sis/AnyKernel3
          cp arch/arm64/boot/Image.gz AnyKernel3/
          cd AnyKernel3
          zip -r9 "../${ZIP_NAME}" ./*
          echo "zip_name=${ZIP_NAME}" >> $GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.package.outputs.zip_name }}
          path: kernel/out/${{ steps.package.outputs.zip_name }}

  release:
    needs: [set-date, build]
    if: ${{ github.event.inputs.RELEASE == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release Notes
        run: |
          echo "# TegarXLu GKI Kernel ${{ needs.set-date.outputs.date }}" > release.md
          echo "## Build Variants" >> release.md
          echo "- **Non-root**: Standard GKI kernel" >> release.md
          echo "- **KernelSU-next**: With root support via KernelSU" >> release.md
          echo "- **SukiSU**: With sUSFS support" >> release.md
          echo "" >> release.md
          echo "## Features" >> release.md
          echo "- Built with Clang 19" >> release.md
          echo "- Full LTO optimization" >> release.md
          echo "- Snapdragon performance tweaks" >> release.md

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.set-date.outputs.date }}
          name: TegarXLu GKI ${{ needs.set-date.outputs.date }}
          body_path: release.md
          files: |
            artifacts/*.zip
